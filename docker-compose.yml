# docker-compose.yml

services:
  rabbitmq:
    build:
      context: .
      dockerfile: devops/docker/rabbitmq-service.Dockerfile
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - ./.env
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - backend-network

  api-gateway:
    build:
      context: .
      dockerfile: devops/docker/api-gateway.Dockerfile
    ports:
      - "3000:3000"
    #   #      - USER_SERVICE_URL=http://user-service:3001
    #   #      - PROFESSIONAL_SERVICE_URL=http://professional-service:3002
    #    - JOB_SERVICE_URL=http://job-service:3003
    #    - PAYMENT_SERVICE_URL=http://payment-service:3004
    #    - NOTIFICATION_SERVICE_URL=http://notification-service:3005
    #    - JWT_SECRET=your_jwt_secret
    env_file:
      - ./.env
    depends_on:
      - user-service
      - professional-service
      - job-service
      #      - payment-service
      - notification-service
    networks:
      - backend-network
      - frontend-network

  user-service:
    build:
      context: .
      dockerfile: devops/docker/user-service.Dockerfile
    env_file:
      - ./.env
    depends_on:
      - mongodb
    networks:
      - backend-network

  professional-service:
    build:
      context: .
      dockerfile: devops/docker/professional-service.Dockerfile
    #   #    environment:
    #   #      - MONGODB_URI=mongodb://mongodb:27017/professional-service
    #   #      - USER_SERVICE_URL=http://user-service:3001
    #   #      - JWT_SECRET=your_jwt_secret
    env_file:
      - ./.env
      # - ./backend/professional-service/.env
    depends_on:
      - mongodb
      - user-service
    networks:
      - backend-network

  job-service:
    build:
      context: .
      dockerfile: devops/docker/job-service.Dockerfile
    #   #    environment:
    #   #      - MONGODB_URI=mongodb://mongodb:27017/job-service
    #   #      - NOTIFICATION_SERVICE_URL=http://notification-service:3005
    #   #      - JWT_SECRET=your_jwt_secret
    env_file:
      - ./.env
      # - ./backend/job-service/.env
    depends_on:
      - mongodb
      - notification-service
    networks:
      - backend-network

  # payment-service:
  #   build:
  #     context: .
  #     dockerfile: devops/docker/payment-service.Dockerfile
  #   #    environment:
  #   #      - MONGODB_URI=mongodb://mongodb:27017/payment-service
  #   #      - JOB_SERVICE_URL=http://job-service:3003
  #   #      - NOTIFICATION_SERVICE_URL=http://notification-service:3005
  #   #      - MERCADOPAGO_ACCESS_TOKEN=your_mercadopago_access_token
  #   #      - FRONTEND_URL=http://localhost:3006
  #   #      - JWT_SECRET=your_jwt_secret
  #   env_file:
  #     - ./.env
  #     # - ./backend/payment-service/.env
  #   depends_on:
  #     - mongodb
  #     - job-service
  #     - notification-service
  #   networks:
  #     - backend-network

  notification-service:
    build:
      context: .
      dockerfile: devops/docker/notification-service.Dockerfile
    container_name: notification-service
    depends_on:
      - rabbitmq
    env_file:
      - ./.env
    networks:
      - app-network
    restart: unless-stopped

  web-frontend:
    build:
      context: .
      dockerfile: devops/docker/web-frontend.Dockerfile
    ports:
      - "3006:80"
    depends_on:
      - api-gateway
    networks:
      - frontend-network

networks:
  backend-network:
  frontend-network:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  rabbitmq_data:
